#!/usr/bin/env node

/********************************************************
 * A simple wrapper for zlib
 *
 * Author:  wacky6, 416707889@qq.com
 * License: MIT
 ********************************************************/

var usage = [
    'Usage:',
    '  zlib -c < source > compressed',
    '  zlib -d < compressed > source',
    '  zlib file',
    'Note:',
    '  first two usage process data from stdin/stdout',
    '  third usage detects file extension',
    '  compressed file will have .zlib extension'
];

var zlib = require('zlib');
var fs   = require('fs');
var extname = require('path').extname;

var extension = '.zlib';

var args = process.argv.slice(2);
var input, output, filter;


if (args.length==1) {
    if (args[0]=='-c' || args[0]=='-d'){
        input = process.stdin;
        output = process.stdout;
        if (args[0]=='-c') filter=zlib.createDeflate();
        if (args[0]=='-d') filter=zlib.createInflate();
    }else{
        var path = args[0];
        if (extname(path)=='.zlib') {
            input=fs.createReadStream(path);
            output=fs.createWriteStream(path.substring(0, path.length-extension.length));
            filter=zlib.createInflate();
        }else{
            input=fs.createReadStream(path);
            output=fs.createWriteStream(path+extension);
            filter=zlib.createDeflate();
        }
        input.on('error',function(e){
            process.stderr.write(e.code+'\n');
        });
        output.on('error', function(e){
            process.stderr.write(e.code+'\n');
        });
    }
    input.pipe(filter).pipe(output);
}else{ // usage
    for (var i in usage){
        process.stderr.write(usage[i]+'\n');
    }
}